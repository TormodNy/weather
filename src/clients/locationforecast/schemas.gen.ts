// This file is auto-generated by @hey-api/openapi-ts

export const ForecastSchema = {
    properties: {
        meta: {
            properties: {
                units: {
                    $ref: "#/definitions/ForecastUnits",
                },
                updated_at: {
                    description: "Update time for this forecast",
                    example: "2019-12-03T13:52:13Z",
                    type: "string",
                },
            },
            required: ["updated_at", "units"],
            type: "object",
        },
        timeseries: {
            items: {
                $ref: "#/definitions/ForecastTimeStep",
            },
            type: "array",
        },
    },
    required: ["meta", "timeseries"],
    title: "Forecast timeseries",
    type: "object",
} as const;

export const ForecastSummarySchema = {
    description: "Summary of weather conditions.",
    properties: {
        symbol_code: {
            $ref: "#/definitions/WeatherSymbol",
        },
    },
    required: ["symbol_code"],
    type: "object",
} as const;

export const ForecastTimeInstantSchema = {
    description: "Weather parameters valid for a specific point in time.",
    properties: {
        air_pressure_at_sea_level: {
            description: "Air pressure at sea level",
            example: 1017.23,
            type: "number",
        },
        air_temperature: {
            description: "Air temperature",
            example: 17.1,
            type: "number",
        },
        cloud_area_fraction: {
            description: "Amount of sky covered by clouds.",
            example: 95.2,
            type: "number",
        },
        cloud_area_fraction_high: {
            description: "Amount of sky covered by clouds at high elevation.",
            example: 95.2,
            type: "number",
        },
        cloud_area_fraction_low: {
            description: "Amount of sky covered by clouds at low elevation.",
            example: 95.2,
            type: "number",
        },
        cloud_area_fraction_medium: {
            description: "Amount of sky covered by clouds at medium elevation.",
            example: 95.2,
            type: "number",
        },
        dew_point_temperature: {
            description: "Dew point temperature at sea level",
            example: 8.1,
            type: "number",
        },
        fog_area_fraction: {
            description: "Amount of area covered by fog.",
            example: 95.2,
            type: "number",
        },
        relative_humidity: {
            description: "Amount of humidity in the air.",
            example: 81.1,
            type: "number",
        },
        wind_from_direction: {
            description:
                "The direction wind is coming from, in degrees clockwise from North",
            example: 121.3,
            type: "number",
        },
        wind_speed: {
            description: "Speed of wind",
            example: 5.9,
            type: "number",
        },
        wind_speed_of_gust: {
            description: "Speed of wind gust",
            example: 15.9,
            type: "number",
        },
    },
    type: "object",
} as const;

export const ForecastTimePeriodSchema = {
    description: "Weather parameters valid for a specified time period.",
    properties: {
        air_temperature_max: {
            description: "Maximum air temperature in period",
            example: 17.1,
            type: "number",
        },
        air_temperature_min: {
            description: "Minimum air temperature in period",
            example: 11.1,
            type: "number",
        },
        precipitation_amount: {
            description:
                "Best estimate for amount of precipitation for this period",
            example: 1.71,
            type: "number",
        },
        precipitation_amount_max: {
            description: "Maximum amount of precipitation for this period",
            example: 4.32,
            type: "number",
        },
        precipitation_amount_min: {
            description: "Minimum amount of precipitation for this period",
            example: 4.32,
            type: "number",
        },
        probability_of_precipitation: {
            description:
                "Probability of any precipitation coming for this period",
            example: 37,
            type: "number",
        },
        probability_of_thunder: {
            description: "Probability of any thunder coming for this period",
            example: 54.32,
            type: "number",
        },
        ultraviolet_index_clear_sky_max: {
            description: "Maximum ultraviolet index if sky is clear",
            example: 1,
            type: "number",
        },
    },
    type: "object",
} as const;

export const ForecastTimeStepSchema = {
    properties: {
        data: {
            description: "Forecast for a specific time",
            properties: {
                instant: {
                    description:
                        "Parameters which applies to this exact point in time",
                    properties: {
                        details: {
                            $ref: "#/definitions/ForecastTimeInstant",
                        },
                    },
                    type: "object",
                },
                next_12_hours: {
                    description:
                        "Parameters with validity times over twelve hours. Will not exist for all time steps.",
                    properties: {
                        details: {
                            $ref: "#/definitions/ForecastTimePeriod",
                        },
                        summary: {
                            $ref: "#/definitions/ForecastSummary",
                        },
                    },
                    required: ["summary", "details"],
                    type: "object",
                },
                next_1_hours: {
                    description:
                        "Parameters with validity times over one hour. Will not exist for all time steps.",
                    properties: {
                        details: {
                            $ref: "#/definitions/ForecastTimePeriod",
                        },
                        summary: {
                            $ref: "#/definitions/ForecastSummary",
                        },
                    },
                    required: ["summary", "details"],
                    type: "object",
                },
                next_6_hours: {
                    description:
                        "Parameters with validity times over six hours. Will not exist for all time steps.",
                    properties: {
                        details: {
                            $ref: "#/definitions/ForecastTimePeriod",
                        },
                        summary: {
                            $ref: "#/definitions/ForecastSummary",
                        },
                    },
                    required: ["summary", "details"],
                    type: "object",
                },
            },
            required: ["instant"],
            type: "object",
        },
        time: {
            description:
                "The time these forecast values are valid for. Timestamp in format YYYY-MM-DDThh:mm:ssZ (ISO 8601)",
            example: "2019-12-03T14:00:00Z",
            type: "string",
        },
    },
    required: ["time", "data"],
    title: "Forecast for a specific time step",
    type: "object",
} as const;

export const ForecastUnitsSchema = {
    properties: {
        air_pressure_at_sea_level: {
            example: "hPa",
            type: "string",
        },
        air_temperature: {
            example: "C",
            type: "string",
        },
        air_temperature_max: {
            example: "C",
            type: "string",
        },
        air_temperature_min: {
            example: "C",
            type: "string",
        },
        cloud_area_fraction: {
            example: "%",
            type: "string",
        },
        cloud_area_fraction_high: {
            example: "%",
            type: "string",
        },
        cloud_area_fraction_low: {
            example: "%",
            type: "string",
        },
        cloud_area_fraction_medium: {
            example: "%",
            type: "string",
        },
        dew_point_temperature: {
            example: "C",
            type: "string",
        },
        fog_area_fraction: {
            example: "%",
            type: "string",
        },
        precipitation_amount: {
            example: "mm",
            type: "string",
        },
        precipitation_amount_max: {
            example: "mm",
            type: "string",
        },
        precipitation_amount_min: {
            example: "mm",
            type: "string",
        },
        probability_of_precipitation: {
            example: "%",
            type: "string",
        },
        probability_of_thunder: {
            example: "%",
            type: "string",
        },
        relative_humidity: {
            example: "%",
            type: "string",
        },
        ultraviolet_index_clear_sky_max: {
            example: "1",
            type: "string",
        },
        wind_from_direction: {
            example: "degrees",
            type: "string",
        },
        wind_speed: {
            example: "m/s",
            type: "string",
        },
        wind_speed_of_gust: {
            example: "m/s",
            type: "string",
        },
    },
    type: "object",
} as const;

export const METJSONForecastSchema = {
    properties: {
        geometry: {
            $ref: "#/definitions/PointGeometry",
        },
        properties: {
            $ref: "#/definitions/Forecast",
        },
        type: {
            enum: ["Feature"],
            example: "Feature",
            type: "string",
        },
    },
    required: ["type", "geometry", "properties"],
    title: "GeoJSON Forecast Timeseries",
    type: "object",
} as const;

export const PointGeometrySchema = {
    properties: {
        coordinates: {
            description:
                "[longitude, latitude, altitude]. All numbers in decimal.",
            example: [60.5, 11.59, 1001],
            items: {
                type: "number",
            },
            minItems: 2,
            type: "array",
        },
        type: {
            enum: ["Point"],
            type: "string",
        },
    },
    required: ["type", "coordinates"],
    title: "GeoJSON point type",
    type: "object",
} as const;

export const WeatherSymbolSchema = {
    description:
        "A identifier that sums up the weather condition for this time period, see documentation.",
    enum: [
        "clearsky_day",
        "clearsky_night",
        "clearsky_polartwilight",
        "fair_day",
        "fair_night",
        "fair_polartwilight",
        "lightssnowshowersandthunder_day",
        "lightssnowshowersandthunder_night",
        "lightssnowshowersandthunder_polartwilight",
        "lightsnowshowers_day",
        "lightsnowshowers_night",
        "lightsnowshowers_polartwilight",
        "heavyrainandthunder",
        "heavysnowandthunder",
        "rainandthunder",
        "heavysleetshowersandthunder_day",
        "heavysleetshowersandthunder_night",
        "heavysleetshowersandthunder_polartwilight",
        "heavysnow",
        "heavyrainshowers_day",
        "heavyrainshowers_night",
        "heavyrainshowers_polartwilight",
        "lightsleet",
        "heavyrain",
        "lightrainshowers_day",
        "lightrainshowers_night",
        "lightrainshowers_polartwilight",
        "heavysleetshowers_day",
        "heavysleetshowers_night",
        "heavysleetshowers_polartwilight",
        "lightsleetshowers_day",
        "lightsleetshowers_night",
        "lightsleetshowers_polartwilight",
        "snow",
        "heavyrainshowersandthunder_day",
        "heavyrainshowersandthunder_night",
        "heavyrainshowersandthunder_polartwilight",
        "snowshowers_day",
        "snowshowers_night",
        "snowshowers_polartwilight",
        "fog",
        "snowshowersandthunder_day",
        "snowshowersandthunder_night",
        "snowshowersandthunder_polartwilight",
        "lightsnowandthunder",
        "heavysleetandthunder",
        "lightrain",
        "rainshowersandthunder_day",
        "rainshowersandthunder_night",
        "rainshowersandthunder_polartwilight",
        "rain",
        "lightsnow",
        "lightrainshowersandthunder_day",
        "lightrainshowersandthunder_night",
        "lightrainshowersandthunder_polartwilight",
        "heavysleet",
        "sleetandthunder",
        "lightrainandthunder",
        "sleet",
        "lightssleetshowersandthunder_day",
        "lightssleetshowersandthunder_night",
        "lightssleetshowersandthunder_polartwilight",
        "lightsleetandthunder",
        "partlycloudy_day",
        "partlycloudy_night",
        "partlycloudy_polartwilight",
        "sleetshowersandthunder_day",
        "sleetshowersandthunder_night",
        "sleetshowersandthunder_polartwilight",
        "rainshowers_day",
        "rainshowers_night",
        "rainshowers_polartwilight",
        "snowandthunder",
        "sleetshowers_day",
        "sleetshowers_night",
        "sleetshowers_polartwilight",
        "cloudy",
        "heavysnowshowersandthunder_day",
        "heavysnowshowersandthunder_night",
        "heavysnowshowersandthunder_polartwilight",
        "heavysnowshowers_day",
        "heavysnowshowers_night",
        "heavysnowshowers_polartwilight",
    ],
    example: "clearsky_day",
    type: "string",
} as const;
